version: '3.8'

services:
  db:
    build:
      context: .
      dockerfile: ./Dockerfile.postgres
    restart: always
    container_name: database
    platform: linux/arm64/v8    
    env_file:
      - db.env         
    volumes:
      - ./POSTGRES_DATA:/var/lib/postgresql/data      
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 15s
      retries: 5
 
  # redis:
  #   image: redis
  #   container_name: redis
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #   ports:
  #     - "6379:6379"
  
  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - 3000:3000 
 
  app:
    container_name: measureIt
    restart: always
    env_file:
      - db.env         
    build:
      context: .
      dockerfile: ./Dockerfile.app
    ports:
      - 8000:8000  
    volumes:      
      - .:/api
    depends_on:      
      db:
        condition: service_healthy
      # redis:
      #   condition: service_healthy
    command: ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000", "--access-log", "--reload"]
    
  # tests:
  #   container_name: measurementIT_api_test    
  #   env_file:
  #     - config.env         
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile.app
  #   ports:
  #     - 8001:8000     
  #   command: pytest tests
  #   volumes: 
  #     - .:/api
  #   depends_on:      
  #     db:
  #       condition: service_healthy

# networks:
#   proxy:
#     external: true
    